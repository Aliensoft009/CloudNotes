<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlogExtensionDescription" xml:space="preserve">
    <value>Publish current note to the web log.</value>
  </data>
  <data name="BlogExtensionToolName" xml:space="preserve">
    <value>Publish to Blog...</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="BlogIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Blog_16px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DownloadingWebPage" xml:space="preserve">
    <value>Downloading the web page...</value>
  </data>
  <data name="ExportToHTMLImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\page_white_world.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExportToTextImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\page_white_text.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HtmlExporterDescription" xml:space="preserve">
    <value>Saves the note as an HTML file.</value>
  </data>
  <data name="HtmlExporterDisplayName" xml:space="preserve">
    <value>Save As HTML</value>
  </data>
  <data name="HtmlFileFilterDescription" xml:space="preserve">
    <value>HTML Files (*.html)</value>
  </data>
  <data name="ImportFromWeb" xml:space="preserve">
    <value>Import from Web...</value>
  </data>
  <data name="ImportFromWebDescription" xml:space="preserve">
    <value>Download the HTML web and import it as a new note.</value>
  </data>
  <data name="ImportFromWebDuplicatedTitleErrorMsg" xml:space="preserve">
    <value>The title is duplicated with the existing note.</value>
  </data>
  <data name="ImportFromWebEmptyTitleErrorMsg" xml:space="preserve">
    <value>The title cannot be empty.</value>
  </data>
  <data name="ImportFromWebImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\world_go.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ImportFromWebInputTitlePrompt" xml:space="preserve">
    <value>The title extracted from the downloaded HTML is either duplicated with the existing one, or empty. Please specify another title for the importing note.</value>
  </data>
  <data name="ImportFromWebInputTitleText" xml:space="preserve">
    <value>Duplicated Note Title</value>
  </data>
  <data name="LinkEmpty" xml:space="preserve">
    <value>The link cannot be empty.</value>
  </data>
  <data name="LinkNotValid" xml:space="preserve">
    <value>The format of the link is invalid.</value>
  </data>
  <data name="ProcessingImages" xml:space="preserve">
    <value>Processing images...</value>
  </data>
  <data name="TextFileExporterDescription" xml:space="preserve">
    <value>Saves the note as a text file.</value>
  </data>
  <data name="TextFileExporterDisplayName" xml:space="preserve">
    <value>Save As Text File</value>
  </data>
  <data name="TextFileFilterDescription" xml:space="preserve">
    <value>Text Files (*.txt)</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="BlogExtensionCannotConnectToBlogService" xml:space="preserve">
    <value>Cannot connect to the blog service.</value>
  </data>
  <data name="PublishSucceeded" xml:space="preserve">
    <value>Publish succeeded!</value>
  </data>
  <data name="ManufactureName" xml:space="preserve">
    <value>Sunny Chen</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="TestConnectionSucceeded" xml:space="preserve">
    <value>Test connection succeeded.</value>
  </data>
  <data name="TestConnectionFailed" xml:space="preserve">
    <value>Test connection failed.</value>
  </data>
  <data name="NoActiveNoteOpened" xml:space="preserve">
    <value>No active note has been opened, operation cancelled.</value>
  </data>
  <data name="InsertSourceCodeDescription" xml:space="preserve">
    <value>Insert a &lt;pre&gt; tag into the note HTML content, which will be rendered as syntax hightlighted source code snippet when Alexgorbatchev Syntax Highlighter plugin is enabled on the web page.</value>
  </data>
  <data name="InsertSourceCodeDisplayName" xml:space="preserve">
    <value>Alexgovbatchev Syntax Highlighting...</value>
  </data>
  <data name="CSharp" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\CSharpFile_SolutionExplorerNode.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>